// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: query.sql

package db

import (
	"context"
	"database/sql"
)

const saveEsim = `-- name: SaveEsim :execresult
INSERT INTO ` + "`" + `t_cp_running_bill_esim` + "`" + ` ( ` + "`" + `id` + "`" + `, ` + "`" + `iccid` + "`" + `, ` + "`" + `imsi` + "`" + `, ` + "`" + `msisdn` + "`" + `, ` + "`" + `json` + "`" + `,  ` + "`" + `create_time` + "`" + `, ` + "`" + `status` + "`" + `)
VALUES
    ( ?, ?, ?, ?,?,?, ? )
`

type SaveEsimParams struct {
	ID         int64          `json:"id"`
	Iccid      string         `json:"iccid"`
	Imsi       string         `json:"imsi"`
	Msisdn     string         `json:"msisdn"`
	Json       sql.NullString `json:"json"`
	CreateTime sql.NullTime   `json:"create_time"`
	Status     sql.NullString `json:"status"`
}

func (q *Queries) SaveEsim(ctx context.Context, arg SaveEsimParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, saveEsim,
		arg.ID,
		arg.Iccid,
		arg.Imsi,
		arg.Msisdn,
		arg.Json,
		arg.CreateTime,
		arg.Status,
	)
}

const updateEsimEffectiveTime = `-- name: UpdateEsimEffectiveTime :exec
UPDATE t_cp_running_bill_esim SET effective_time = ?  ,  ` + "`" + `status` + "`" + ` = ?
WHERE

        id = ?
`

type UpdateEsimEffectiveTimeParams struct {
	EffectiveTime sql.NullTime   `json:"effective_time"`
	Status        sql.NullString `json:"status"`
	ID            int64          `json:"id"`
}

func (q *Queries) UpdateEsimEffectiveTime(ctx context.Context, arg UpdateEsimEffectiveTimeParams) error {
	_, err := q.db.ExecContext(ctx, updateEsimEffectiveTime, arg.EffectiveTime, arg.Status, arg.ID)
	return err
}
